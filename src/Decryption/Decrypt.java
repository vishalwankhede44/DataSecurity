
package decryption;



import java.awt.FileDialog;
import java.io.File;
import java.io.FileInputStream;
import java.net.*;
import java.io.PrintWriter;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JOptionPane;
import Decryption.Authenticate;

/**
 *
 * @author The Programmer
 */
public class Decrypt extends javax.swing.JFrame {

    /**
     * Creates new form Decryption
     */

    public Decrypt() {

    }
    Statement st1,st,st2;
    Details dialog;
    public Decrypt(String us) throws ClassNotFoundException, SQLException
    {
        initComponents();
        
        c_user.setText(us);
         dialog = new Details(new javax.swing.JFrame(), true,us);
        setBackground(new java.awt.Color(0,0,51));
        getMac();
        try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cryptography","root","");
        st=con.createStatement();
        int id=0;
         DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
         LocalDateTime now = LocalDateTime.now();
       String date=""+dtf.format(now);
        st1=con.createStatement();
        st2=con.createStatement();
        ResultSet rs=st.executeQuery("select UID from user where Username = '"+us+"';");
         if(rs.next())
         {
             id=rs.getInt("UID");
//             System.out.println(1);

         }
//         System.out.println(2);

         ResultSet rs1=st2.executeQuery("select MAC from dec_info where UID = "+id+"");

         boolean find=false,NEW=true;
         while(rs1.next())
         {
            NEW= false;
             String mac=rs1.getString("MAC");
             
             if(!(mac.equals(c_mac.getText())))
             {
                find=true;
             }
             else find=false;

         }
         if(find)
            st1.execute("insert into dec_info values (null,'"+id+"','"+c_mac.getText()+"','"+c_ip.getText()+"','Decryption','"+date+"')");
         else if(!find&&NEW)
             st1.execute("insert into dec_info values (null,'"+id+"','"+c_mac.getText()+"','"+c_ip.getText()+"','Decryption','"+date+"')");





     //   ResultSet rs=st.executeQuery("insert into info ");
       }
       catch(Exception e)
       {
           JOptionPane.showMessageDialog(null,e);
           e.printStackTrace();
       }
     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtb = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        plain = new javax.swing.JTextArea();
        dec = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cipherta = new javax.swing.JTextArea();
        c_mac = new javax.swing.JLabel();
        c_user = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        c_ip = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jButton5 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jButton8 = new javax.swing.JButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        change_color = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        change_color1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Decryption");
        setLocation(new java.awt.Point(245, 10));
        setMinimumSize(new java.awt.Dimension(802, 680));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jtb.setBackground(new java.awt.Color(0, 102, 137));
        jtb.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbStateChanged(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 0, 51));
        jPanel3.setLayout(null);

        plain.setColumns(20);
        plain.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        plain.setRows(5);
        plain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        plain.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane1.setViewportView(plain);
        plain.setLineWrap(true);
        plain.setEditable(false);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(97, 55, 600, 414);

        dec.setBackground(new java.awt.Color(102, 153, 255));
        dec.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        dec.setForeground(new java.awt.Color(255, 255, 255));
        dec.setText("Decrypt");
        dec.setBorder(null);
        dec.setOpaque(false);
        dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decActionPerformed(evt);
            }
        });
        jPanel3.add(dec);
        dec.setBounds(320, 480, 180, 50);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 255, 255));
        jLabel3.setText("Cipher Text (Encrypted Text)");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(97, 19, 320, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\BACK1.jpg")); // NOI18N
        jPanel3.add(jLabel1);
        jLabel1.setBounds(0, 0, 820, 580);

        jLabel5.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\swback.jpg")); // NOI18N
        jPanel3.add(jLabel5);
        jLabel5.setBounds(0, 0, 800, 590);

        jLabel8.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\swback.jpg")); // NOI18N
        jPanel3.add(jLabel8);
        jLabel8.setBounds(0, 0, 800, 590);

        jtb.addTab("Cipher Text", jPanel3);

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 255, 255));
        jLabel2.setText("Plain Text  ( Normal text )");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(97, 19, 269, 30);

        cipherta.setColumns(20);
        cipherta.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        cipherta.setRows(5);
        cipherta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 153, 255)));
        cipherta.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane2.setViewportView(cipherta);
        cipherta.setLineWrap(true);
        cipherta.setEditable(false);
        //cipher.setEditable(false);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(97, 55, 600, 380);

        c_mac.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        c_mac.setForeground(new java.awt.Color(255, 255, 255));
        c_mac.setText("MAC");
        jPanel1.add(c_mac);
        c_mac.setBounds(220, 490, 220, 30);

        c_user.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        c_user.setForeground(new java.awt.Color(255, 255, 255));
        c_user.setText("Current_user");
        jPanel1.add(c_user);
        c_user.setBounds(220, 460, 120, 30);

        jLabel13.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 255, 0));
        jLabel13.setText("IP Address      :");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(100, 520, 110, 30);

        c_ip.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        c_ip.setForeground(new java.awt.Color(255, 255, 255));
        c_ip.setText("IP");
        jPanel1.add(c_ip);
        c_ip.setBounds(220, 520, 120, 30);

        jLabel12.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 255, 0));
        jLabel12.setText("MAC Address :");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(100, 490, 110, 30);

        jLabel11.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 255, 0));
        jLabel11.setText(" User Name    :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(100, 460, 110, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\BACK1.jpg")); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, -10, 800, 590);

        jLabel6.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\swback.jpg")); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 800, 590);

        jLabel7.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\swback.jpg")); // NOI18N
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 0, 800, 590);

        jtb.addTab("Plain Text", jPanel1);

        getContentPane().add(jtb);
        jtb.setBounds(0, 42, 800, 600);

        jToolBar1.setBackground(new java.awt.Color(0, 102, 137));
        jToolBar1.setRollover(true);

        jButton3.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\OPENI.png")); // NOI18N
        jButton3.setToolTipText("Open");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);
        jToolBar1.add(jSeparator6);

        jButton5.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\saveicon.jpg")); // NOI18N
        jButton5.setToolTipText("Save");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);
        jToolBar1.add(jSeparator7);

        jButton4.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\gmail_ic.jpg")); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);
        jToolBar1.add(jSeparator8);

        jButton8.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\rsz_1log.png")); // NOI18N
        jButton8.setToolTipText("Logs");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);
        jToolBar1.add(jSeparator9);

        change_color.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\color_ic.png")); // NOI18N
        change_color.setToolTipText("Change Color");
        change_color.setFocusable(false);
        change_color.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        change_color.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        change_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_colorActionPerformed(evt);
            }
        });
        jToolBar1.add(change_color);
        jToolBar1.add(jSeparator10);

        change_color1.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\keygen.jpg")); // NOI18N
        change_color1.setToolTipText("Generate Key");
        change_color1.setFocusable(false);
        change_color1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        change_color1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        change_color1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_color1ActionPerformed(evt);
            }
        });
        jToolBar1.add(change_color1);

        jLabel15.setText("                                                                                          ");
        jLabel15.setMaximumSize(new java.awt.Dimension(430, 14));
        jLabel15.setMinimumSize(new java.awt.Dimension(430, 14));
        jLabel15.setPreferredSize(new java.awt.Dimension(430, 14));
        jToolBar1.add(jLabel15);

        jButton2.setIcon(new javax.swing.ImageIcon("D:\\FinalProject\\DataSecurity\\Images\\LOF.jpg")); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        getContentPane().add(jToolBar1);
        jToolBar1.setBounds(0, 0, 802, 40);
        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void getMac(){

           InetAddress ip;
           try {
                 ip = InetAddress.getLocalHost();
                 System.out.println("Current IP address : " + ip.getHostAddress());
                 c_ip.setText( ip.getHostAddress());
                 NetworkInterface network = NetworkInterface.getByInetAddress(ip);

                 byte[] mac = network.getHardwareAddress();

                System.out.print("Current MAC address : ");

                 StringBuilder sb = new StringBuilder();
                 try{
                 for (int i = 0; i < mac.length; i++) {
                     sb.append(String.format("%02X%s", mac[i], (i < (mac.length - 1)) ? "-" : ""));
                }
                 }
                 catch(Exception eg)
                 {
                     JOptionPane.showMessageDialog(null, "Please connect internet");
                     System.exit(0);
                 }
                 c_mac.setText(sb.toString());
                } catch (UnknownHostException e) {
                         e.printStackTrace();
             } catch (SocketException e){
                  e.printStackTrace();}

}
  
    private void jtbStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtbStateChanged
  
    }//GEN-LAST:event_jtbStateChanged
 public String openF(String s)
  {
                FileDialog dlg=new FileDialog(this,s,FileDialog.LOAD);

	
          dlg.setFile("*.txt");
	           dlg.setVisible(true);
//	           System.out.print(""+dlg.getDirectory()+dlg.getFile());
                   return (""+dlg.getDirectory()+dlg.getFile());


  }
 public String saveF(String s)
  {
      
	    FileDialog dlg=new FileDialog(this,s,FileDialog.SAVE);
          dlg.setFile("*.txt");
	           dlg.setVisible(true);
//	           System.out.print(""+dlg.getDirectory()+dlg.getFile());
                   return (""+dlg.getDirectory()+dlg.getFile());


  }
 

    private static byte[] readContentIntoByteArray(File file)
   {
      FileInputStream fileInputStream = null;
      byte[] bFile = new byte[(int) file.length()];
      try
      {
         //convert file into array of bytes
         fileInputStream = new FileInputStream(file);
         fileInputStream.read(bFile);
         fileInputStream.close();
//         for (int i = 0; i < bFile.length; i++)
//         {
//            System.out.print((char) bFile[i]);
//         }
      }
      catch (Exception e)
      {
         e.printStackTrace();
      }
      return bFile;
   }
    
    public  void decryption()
    {
        try{
         
             String FILEPATH = openF("Open Encrypted Key");
          File  file = new File(FILEPATH);
        
           byte[]  enckey = readContentIntoByteArray(file);
               
            FILEPATH = openF("Open Private Key");
            file = new File(FILEPATH);
       
         Cipher cipher = Cipher.getInstance("RSA");
             PrivateKey privateKy = KeyFactory.getInstance("RSA").generatePrivate(new PKCS8EncodedKeySpec(readContentIntoByteArray(file)));
            cipher.init(Cipher.PRIVATE_KEY, privateKy);
            byte[] decryptedKey = cipher.doFinal(enckey);

            SecretKey originalKey = new SecretKeySpec(decryptedKey , 0, decryptedKey.length, "AES");
           
            Cipher aesDCipher = Cipher.getInstance("AES");
            aesDCipher.init(Cipher.DECRYPT_MODE, originalKey);
            byte[] bytePlainText = aesDCipher.doFinal(enc);
            String DplainText = new String(bytePlainText);
            System.out.println("Decrypted \n"+DplainText);
            cipherta.setText(DplainText);
            jtb.setSelectedIndex(1);
        }
        catch(Exception ex)
        {
          
        }
    }
    private void decActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decActionPerformed
           Authenticate au =  new Authenticate(c_user.getText(),this);
           au.setVisible(true);
     
        
    }//GEN-LAST:event_decActionPerformed
 public static byte[] decrypt(PrivateKey publicKey, byte [] encrypted) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, publicKey);

        return cipher.doFinal(encrypted);
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        openM();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        saveM();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int n=JOptionPane.showConfirmDialog(null,"Are you sure you want to logout?");
       if(n==0)
       {

               new Login().setVisible(true);

           this.dispose();

       }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      
        
        Decryption.Email dialog = new Decryption.Email(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      JOptionPane.showMessageDialog(null, "Click on logout button");
    }//GEN-LAST:event_formWindowClosing

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        dialog.setVisible(true);


    }//GEN-LAST:event_jButton8ActionPerformed

    private void change_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_colorActionPerformed
         Decryption.ColorChooser cc = new Decryption.ColorChooser(c_user.getText());
        cc.setVisible(true);
    }//GEN-LAST:event_change_colorActionPerformed

    private void change_color1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_color1ActionPerformed
        new Decryption.GenKey().setVisible(true);
    }//GEN-LAST:event_change_color1ActionPerformed
public void saveM()
       {
          FileDialog chooser=new FileDialog(this,"Choose a file",FileDialog.SAVE);

        chooser.setDirectory(".");
         chooser.setFile("*.txt");
        chooser.setVisible(true);



           PrintWriter out=null;
           try
           {
               out=new PrintWriter(chooser.getDirectory()+"\\"+chooser.getFile());
               String hell=(cipherta.getText());
               System.out.println(hell);
               out.println(hell+"\n\r");
               out.flush();
               out.close();
               JOptionPane.showMessageDialog(null,"File Successfully Saved");

           }
           catch(Exception e)
            {
           }
       }
byte[] enc;
 public void openM()
   {
         try{
          String FILEPATH = openF("Open Encrypted Text");
             File file = new File(FILEPATH);
           enc = readContentIntoByteArray(file);
           plain.setText(new String(enc));
         }
         catch(Exception e)
         {}

   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {



                   new Login().setVisible(true);





            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c_ip;
    public javax.swing.JLabel c_mac;
    private javax.swing.JLabel c_user;
    private javax.swing.JButton change_color;
    private javax.swing.JButton change_color1;
    private javax.swing.JTextArea cipherta;
    private javax.swing.JButton dec;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTabbedPane jtb;
    private javax.swing.JTextArea plain;
    // End of variables declaration//GEN-END:variables
}
