/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Decryption;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author The Programmer
 */
public class ColorChooser extends javax.swing.JFrame {

    /**
     * Creates new form ColorChooser
     */Connection con;
     Statement st;
    public ColorChooser(String u) {
         try {
             uname = u;
             initComponents();
             Class.forName("com.mysql.jdbc.Driver");
             con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cryptography","root","");
             st=con.createStatement();
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(ColorChooser.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
             Logger.getLogger(ColorChooser.class.getName()).log(Level.SEVERE, null, ex);
         }
            
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jb = new javax.swing.ButtonGroup();
        p1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        BC = new javax.swing.JTextField();
        GC = new javax.swing.JTextField();
        RC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        custom = new javax.swing.JRadioButton();
        choose = new javax.swing.JRadioButton();
        cancel = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        bvalue = new javax.swing.JLabel();
        rvalue = new javax.swing.JLabel();
        gvalue = new javax.swing.JLabel();
        B = new javax.swing.JSlider();
        G = new javax.swing.JSlider();
        R = new javax.swing.JSlider();

        jb.add(choose);
        jb.add(custom);

        setTitle("ColorChooser");
        setBackground(new java.awt.Color(0, 0, 102));

        p1.setBackground(new java.awt.Color(0, 0, 0));
        p1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(36, 46, 68));

        BC.setBackground(new java.awt.Color(36, 46, 68));
        BC.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        BC.setForeground(new java.awt.Color(255, 255, 255));
        BC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        BC.setText("0");
        BC.setEnabled(false);
        BC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BCActionPerformed(evt);
            }
        });
        BC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BCKeyTyped(evt);
            }
        });

        GC.setBackground(new java.awt.Color(36, 46, 68));
        GC.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        GC.setForeground(new java.awt.Color(255, 255, 255));
        GC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GC.setText("0");
        GC.setEnabled(false);
        GC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GCActionPerformed(evt);
            }
        });
        GC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                GCKeyTyped(evt);
            }
        });

        RC.setBackground(new java.awt.Color(36, 46, 68));
        RC.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        RC.setForeground(new java.awt.Color(255, 255, 255));
        RC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RC.setText("0");
        RC.setEnabled(false);
        RC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RCKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("B :");

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 255));
        jLabel2.setText("G :");

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("R :");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        custom.setBackground(new java.awt.Color(36, 46, 68));
        custom.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        custom.setForeground(new java.awt.Color(153, 255, 255));
        custom.setText("Custom");
        custom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customActionPerformed(evt);
            }
        });

        choose.setBackground(new java.awt.Color(36, 46, 68));
        choose.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        choose.setForeground(new java.awt.Color(153, 255, 255));
        choose.setText("Choose");
        choose.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chooseItemStateChanged(evt);
            }
        });
        choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseActionPerformed(evt);
            }
        });

        cancel.setBackground(new java.awt.Color(89, 199, 198));
        cancel.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        cancel.setForeground(new java.awt.Color(0, 0, 102));
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        submit.setBackground(new java.awt.Color(89, 199, 198));
        submit.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        submit.setForeground(new java.awt.Color(0, 0, 102));
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        bvalue.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        bvalue.setForeground(new java.awt.Color(204, 255, 255));
        bvalue.setText("B : 0");

        rvalue.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        rvalue.setForeground(new java.awt.Color(204, 255, 255));
        rvalue.setText("R : 0");

        gvalue.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        gvalue.setForeground(new java.awt.Color(204, 255, 255));
        gvalue.setText("G : 0");

        B.setBackground(new java.awt.Color(36, 46, 68));
        B.setForeground(new java.awt.Color(255, 255, 255));
        B.setMaximum(255);
        B.setPaintLabels(true);
        B.setPaintTicks(true);
        B.setValue(0);
        B.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BStateChanged(evt);
            }
        });

        G.setBackground(new java.awt.Color(36, 46, 68));
        G.setForeground(new java.awt.Color(255, 255, 255));
        G.setMaximum(255);
        G.setPaintLabels(true);
        G.setPaintTicks(true);
        G.setValue(0);
        G.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GStateChanged(evt);
            }
        });

        R.setBackground(new java.awt.Color(36, 46, 68));
        R.setForeground(new java.awt.Color(255, 255, 255));
        R.setMaximum(255);
        R.setPaintLabels(true);
        R.setPaintTicks(true);
        R.setSnapToTicks(true);
        R.setValue(0);
        R.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        R.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(gvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(89, 89, 89)
                            .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(10, 10, 10)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(32, 32, 32)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(9, 9, 9)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(RC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(GC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addComponent(custom, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(42, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(choose)
                            .addGap(10, 10, 10)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rvalue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(11, 11, 11)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11)
                                    .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(gvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(bvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(custom)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(17, 17, 17)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(RC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(GC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(BC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(95, Short.MAX_VALUE)))
        );

        RC.setTransferHandler(null);
        choose.setSelected(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RStateChanged
        int rv=R.getValue();
        int gv=G.getValue();
        int bv=B.getValue();
        p1.setBackground(new Color(rv,gv,bv));
        rvalue.setText("R : "+rv);
        RC.setText(""+rv);
    }//GEN-LAST:event_RStateChanged

    private void GStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GStateChanged
        int rv=R.getValue();
        int gv=G.getValue();
        int bv=B.getValue();
        p1.setBackground(new Color(rv,gv,bv));
        gvalue.setText("G : "+gv);
         GC.setText(""+gv);
    }//GEN-LAST:event_GStateChanged

    private void BStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BStateChanged
         int rv=R.getValue();
        int gv=G.getValue();
        int bv=B.getValue();
        p1.setBackground(new Color(rv,gv,bv));
        bvalue.setText("B : "+bv);
         BC.setText(""+bv);
    }//GEN-LAST:event_BStateChanged

    private void GCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GCActionPerformed

    private void chooseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chooseItemStateChanged
      
    }//GEN-LAST:event_chooseItemStateChanged
  boolean chooseb;
    private void customActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customActionPerformed
        if(custom.isEnabled())
        {
           R.setEnabled(false);
           G.setEnabled(false);
           B.setEnabled(false);
            RC.setEnabled(true);
           BC.setEnabled(true);
           GC.setEnabled(true);
           RC.setText(R.getValue()+"");
           GC.setText(G.getValue()+"");
           BC.setText(B.getValue()+"");
           chooseb=false;
        }
      
    }//GEN-LAST:event_customActionPerformed

    private void chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseActionPerformed
        if(choose.isEnabled())
       {
           R.setEnabled(true);
           G.setEnabled(true);
           B.setEnabled(true);
           int r=Integer.parseInt(RC.getText());
           int g=Integer.parseInt(GC.getText());
           int b= Integer.parseInt(BC.getText());
           R.setValue(r);
           G.setValue(g);
           B.setValue(b);
           p1.setBackground(new Color(r,g,b));
           
           RC.setEnabled(false);
           BC.setEnabled(false);
           GC.setEnabled(false);
           chooseb=true;
       }
     
    }//GEN-LAST:event_chooseActionPerformed

    private void RCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RCKeyTyped
         char c=evt.getKeyChar();
         
        if((c<'0'||c>'9')||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE)
        {
            evt.consume();
        }
        String temp;
         int num=0,r=0,g=0,b=0;
           if(BC.getText().length()!=0)
               b = Integer.parseInt(BC.getText());
           
           if(GC.getText().length()!=0)
               g = Integer.parseInt(GC.getText());

        temp=RC.getText();
               if(temp.length()>0)
                {   
                    if(c!=KeyEvent.VK_BACK_SPACE&&c!=KeyEvent.VK_DELETE)
                    {
                       num = Integer.parseInt(temp+c);
                       temp = temp+c;
                    }  
                    else
                        num = Integer.parseInt(temp);
                    if(num>255)
                    {
                        RC.setText("255");
                        p1.setBackground(new Color(255,g,b));
                    }
                    else
                         p1.setBackground(new Color(Integer.parseInt(temp),g,b));
                }
               
               if(RC.getText().length()>=3)
                   evt.consume();

            if(RC.getText().length()==0)
               r=0;
           else
               r= Integer.parseInt(temp);
         
           try{
           p1.setBackground(new Color(r,g,b));
           }
           catch(IllegalArgumentException e)
           {
               
           }
                
                

    }//GEN-LAST:event_RCKeyTyped

    private void GCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GCKeyTyped
             char c=evt.getKeyChar();
         
        if((c<'0'||c>'9')||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE)
        {
            evt.consume();
        }
        String temp;
         int num=0,r=0,b=0,g=0;
          if(RC.getText().length()!=0)
                r = Integer.parseInt(RC.getText());
              
           if(BC.getText().length()!=0)
               b = Integer.parseInt(BC.getText());
           
        temp=GC.getText();
        if(temp.length()>0)
                {   
                    if(c!=KeyEvent.VK_BACK_SPACE&&c!=KeyEvent.VK_DELETE){
                       num = Integer.parseInt(temp+c);
                       temp = temp+c;
                    }
                    if(num>255)
                    {
                        GC.setText("255");
                        p1.setBackground(new Color(r,255,b));
                    }
                }
                if(GC.getText().length()>=3)
                   evt.consume();
                
        
            if(RC.getText().length()==0)
               r=0;
           else
                r = Integer.parseInt(RC.getText());
              
           if(BC.getText().length()==0)
               b=0;
           else
               b = Integer.parseInt(BC.getText());
           
           if(GC.getText().length()==0)
               g=0;
           else
               g =  Integer.parseInt(temp);
           
      try{
           p1.setBackground(new Color(r,g,b));
           }
           catch(IllegalArgumentException e)
           {
               
           }
             
    }//GEN-LAST:event_GCKeyTyped

    private void BCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BCActionPerformed

    private void BCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BCKeyTyped
         char c=evt.getKeyChar();
         
        if((c<'0'||c>'9')||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE)
        {
            evt.consume();
        }
        String temp;
         int num=0,r=0,g=0,b=0;
           if(RC.getText().length()!=0)
               r = Integer.parseInt(RC.getText());
           
           if(GC.getText().length()!=0)
               g = Integer.parseInt(GC.getText());

        temp=BC.getText();
        if(temp.length()>0)
                {   
                    if(c!=KeyEvent.VK_BACK_SPACE&&c!=KeyEvent.VK_DELETE)
                    {
                       num = Integer.parseInt(temp+c);
                       temp = temp+c;
                    }  
                    else
                        num = Integer.parseInt(temp);
                    if(num>255)
                    {
                        BC.setText("255");
                        p1.setBackground(new Color(r,g,255));
                    }
                    else
                         p1.setBackground(new Color(r,g,Integer.parseInt(temp)));
                }
                if(BC.getText().length()>=3)
                   evt.consume();

            if(BC.getText().length()==0)
               b=0;
           else
               b= Integer.parseInt(temp);
         
           try{
           p1.setBackground(new Color(r,g,b));
           }
           catch(IllegalArgumentException e)
           {
               
           }
                
                
    }//GEN-LAST:event_BCKeyTyped
String uname ;
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String c;  
        if(chooseb)
            {
              JOptionPane.showMessageDialog(null,"("+R.getValue()+","+G.getValue()+","+B.getValue()+")");
              c ="("+R.getValue()+","+G.getValue()+","+B.getValue()+")";
            }
        else{
                JOptionPane.showMessageDialog(null, "( "+RC.getText()+" , "+GC.getText()+" , "+BC.getText()+" ) ");
                c = RC.getText()+","+GC.getText()+","+BC.getText();
        }
        boolean bool=false;
       try {
            ResultSet rs=st.executeQuery("select * from user"); 
            while(rs.next())
            {
                if(c.equals(rs.getString("Color")))
                {
//                  new Encryption(u).setVisible(true);
                    JOptionPane.showMessageDialog(null,"This color has been taken . Please try another");
                    this.setVisible(false);
                    bool= true;
                    break;
                }
            }
            if(!bool)
            {
                  String sql= "update user set Color ='"+c+"' where Username ='"+uname+"'";
            int result;
            try {
                result= st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Updated Successfully ");
                this.setVisible(false);
                
            } catch (SQLException ex) {
                Logger.getLogger(ColorChooser.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
                
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, ex);
        }
                
                
           
    }//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
          this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ColorChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ColorChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ColorChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ColorChooser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ColorChooser("PRAT").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider B;
    private javax.swing.JTextField BC;
    private javax.swing.JSlider G;
    private javax.swing.JTextField GC;
    private javax.swing.JSlider R;
    private javax.swing.JTextField RC;
    private javax.swing.JLabel bvalue;
    private javax.swing.JButton cancel;
    private javax.swing.JRadioButton choose;
    private javax.swing.JRadioButton custom;
    private javax.swing.JLabel gvalue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.ButtonGroup jb;
    private javax.swing.JPanel p1;
    private javax.swing.JLabel rvalue;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
