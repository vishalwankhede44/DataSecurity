/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Decryption;


import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import decryption.Decrypt;
import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author The Programmer
 */
public class Authenticate extends javax.swing.JFrame {

    /**
     * Creates new form Authenticate
     */
    Decrypt dobj ;
    Statement st;
    public Authenticate(String u,Decrypt d) {
        try {
            uname = u;
            dobj = d;
            initComponents();
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cryptography","root","");
            st=con.createStatement();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Authenticate.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Authenticate.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        check = new javax.swing.JButton();
        key = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fetch = new javax.swing.JButton();

        setTitle("Authenticate");
        setBackground(new java.awt.Color(36, 46, 68));

        jPanel1.setBackground(new java.awt.Color(36, 46, 68));

        check.setBackground(new java.awt.Color(89, 199, 198));
        check.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        check.setForeground(new java.awt.Color(0, 0, 102));
        check.setText("Validate");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        key.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        key.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(48, 255, 200));
        jLabel2.setText("Key");

        fetch.setBackground(new java.awt.Color(89, 199, 198));
        fetch.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        fetch.setForeground(new java.awt.Color(0, 0, 102));
        fetch.setText("Fetch Encrypted Color Values");
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(key)
                    .addComponent(fetch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(fetch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        check.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyKeyTyped
          char c=evt.getKeyChar();
         
        if((c<'0'||c>'9')||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE)
        {
            evt.consume();
        }       
    }//GEN-LAST:event_keyKeyTyped
  
  String uname ;
    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        boolean bool=false;
       try {
           System.out.println(temp_color);
            ResultSet rs=st.executeQuery("select * from user where Username ='"+uname+"'"); 
            while(rs.next())
            {
                if(temp_color.equals(rs.getString("Color")))
                {
                                       JOptionPane.showMessageDialog(null,"Mathced !");
                    this.setVisible(false);
                     dobj.decryption();
                  
                    bool= true;
                    break;
                }
            }
            if(!bool)
                JOptionPane.showMessageDialog(null,"You don't have rights to Decrypt this text !");
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, ex);
        }
      
   
    }//GEN-LAST:event_checkActionPerformed
String readFile() throws IOException {
     FileDialog chooser=new FileDialog(this,"Choose a encrypted color file",FileDialog.LOAD);

        chooser.setDirectory(".");
         chooser.setFile("*.txt");
         chooser.setVisible(true);
         File file = new File(chooser.getDirectory()+"\\"+chooser.getFile());
    BufferedReader br = new BufferedReader(new FileReader(file));
    try {
        StringBuilder sb = new StringBuilder();
        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append("\n");
            line = br.readLine();
        }
        System.out.println(sb.toString());
        return new String(sb);
    } finally {
        br.close();
    }
}

String temp_color;
    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
        if(key.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null,"Key Field Must not be empty");
            return;
        }
        try{
        String enccolor =readFile();
        enccolor = enccolor.trim();
      String ecolor[] = enccolor.split(",");
      System.out.println("Length = "+ecolor.length);
      int r = Integer.parseInt(ecolor[0]);
      int g = Integer.parseInt(ecolor[1]);
      int b = Integer.parseInt(ecolor[2]);
      
      int keyValue = Integer.parseInt(key.getText());
      
      r = r ^ keyValue;
      g = g ^ keyValue;
      b = b ^ keyValue;
      
      String temp = r+","+g+","+b;
      temp_color = temp;
   
      JOptionPane.showMessageDialog(null, "Values are fetched ! \n Now Click on Validate");
      check.setEnabled(true);
      fetch.setEnabled(false);
      
      }
      catch(Exception ex)
      {
          JOptionPane.showMessageDialog(null,""+ex);
          ex.printStackTrace();
      }
    }//GEN-LAST:event_fetchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authenticate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authenticate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authenticate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authenticate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authenticate("VISHAL",new Decrypt()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JButton fetch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField key;
    // End of variables declaration//GEN-END:variables
}
